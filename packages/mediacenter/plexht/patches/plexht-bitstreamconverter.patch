--- a/xbmc/utils/BitstreamConverter.cpp	2015-03-12 20:52:41.218096999 +0100
+++ b/xbmc/utils/BitstreamConverter.cpp	2015-03-12 20:48:25.174096999 +0100
@@ -431,7 +431,7 @@
   Close();
 }
 
-bool CBitstreamConverter::Open(enum CodecID codec, uint8_t *in_extradata, int in_extrasize, bool to_annexb)
+bool CBitstreamConverter::Open(enum AVCodecID codec, uint8_t *in_extradata, int in_extrasize, bool to_annexb)
 {
   m_to_annexb = to_annexb;
 
@@ -439,7 +439,7 @@
 
   switch(codec)
   {
-    case CODEC_ID_H264:
+    case AV_CODEC_ID_H264:
       if (in_extrasize < 7 || in_extradata == NULL)
       {
         CLog::Log(LOGERROR, "CBitstreamConverter::Open avcC data too small or missing\n");
@@ -587,12 +587,12 @@
 
   if (pData)
   {
-    if(m_codec == CODEC_ID_H264)
+    if (m_codec == AV_CODEC_ID_H264)
     {
       if(m_to_annexb)
       {
         int demuxer_bytes = iSize;
-  
+
         uint8_t *demuxer_content = pData;
 
         if (m_convert_bitstream)
--- a/xbmc/utils/BitstreamConverter.h	2015-03-12 20:52:41.218096999 +0100
+++ b/xbmc/utils/BitstreamConverter.h	2015-03-12 20:48:25.174096999 +0100
@@ -114,7 +114,7 @@
   static void     skip_bits( bits_reader_t *br, int nbits );
   static uint32_t get_bits( bits_reader_t *br, int nbits );
 
-  bool Open(enum CodecID codec, uint8_t *in_extradata, int in_extrasize, bool to_annexb);
+  bool Open(enum AVCodecID codec, uint8_t *in_extradata, int in_extrasize, bool to_annexb);
   void Close(void);
   bool NeedConvert(void) { return m_convert_bitstream; };
   bool Convert(uint8_t *pData, int iSize);
@@ -163,7 +163,7 @@
   bool              m_convert_bytestream;
   DllAvUtil         *m_dllAvUtil;
   DllAvFormat       *m_dllAvFormat;
-  CodecID           m_codec;
+  AVCodecID           m_codec;
 };
 
 #endif
